{"version":3,"file":"static/js/315.016dff6b.chunk.js","mappings":"4VAUaA,EAAa,WACxB,OAA+CC,EAAAA,EAAAA,MAAvCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAChC,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAcG,GAAd,WACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAEzBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACEb,GAAW,GADb,SAGSO,EAHT,kEAMgCO,EAAAA,EAAAA,IAAiBP,GANjD,UAMUQ,EANV,OAOIZ,EAAUY,GACmB,IAAzBA,EAAcC,OARtB,wBASMC,EAAAA,GAAAA,MAAY,qCATlB,6EAaIhB,EAAS,EAAD,IAbZ,yBAeID,GAAW,GAff,8EADc,uBAAC,WAAD,wBAmBdkB,KACC,CAACX,IAaJ,OACE,UAAC,EAAAY,QAAD,YACE,UAAC,EAAAC,KAAD,CAAMC,SAAUzB,GAbH,SAAC0B,GAChBhB,EAAgBgB,EAAKf,OAErBI,EAAS,CACPY,SAAUd,EAASc,SACnBC,OAAO,SAAD,OAAWF,EAAKf,SAGxBV,EAAW,YAKT,WACE,SAAC,EAAA4B,OAAD,kBACM9B,EAAS,QAAS,CACpB+B,UAAU,KAFd,IAIEC,YAAY,qBAEd,SAAC,EAAAC,OAAD,CAAQC,KAAK,SAAb,UACE,SAAC,MAAD,SAGH9B,IAAW,SAAC+B,EAAA,EAAD,IACX5B,IACC,+BACE,yBACGA,EAAO6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,0BACE,UAAC,EAAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAM,CAAE5B,SAAAA,EAAU6B,MAAO,mBAFpC,WAIE,SAAC,MAAD,IACCL,MANKD,WAalB,SAAC,KAAD,S,kQChFAO,GAAWC,EAAAA,EAAAA,IAAH,0KAYRC,GAAOD,EAAAA,EAAAA,IAAH,sPAEQ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,QAI9B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,aAKnCZ,GAAOa,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sIAGR,SAACL,GAAD,OAAWA,EAAMC,MAAMM,QAAQ,MAG3B,SAACP,GAAD,OAAWA,EAAMC,MAAMC,OAAOM,QAI9B/B,EAAU4B,EAAAA,GAAAA,IAAH,qNAGLR,GACH,SAACG,GAAD,OAAWA,EAAMC,MAAMM,QAAQ,QAI9BE,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,8CACC,SAACL,GAAD,OAAWA,EAAMC,MAAMM,QAAQ,MAEpC7B,EAAO2B,EAAAA,GAAAA,KAAH,sEAEE,SAACL,GAAD,OAAWA,EAAMC,MAAMM,QAAQ,MAErCxB,EAAQsB,EAAAA,GAAAA,MAAH,wJACHN,GAEJ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOS,SACzB,SAACX,GAAD,OAAWA,EAAMC,MAAMC,OAAOU,WACjC,SAACZ,GAAD,OAAWA,EAAMC,MAAMM,QAAQ,MAE/BrB,EAASmB,EAAAA,GAAAA,OAAH,kQAWK,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOW","sources":["pages/MoviesPage/MoviesPage.jsx","pages/MoviesPage/MoviesPage.styled.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Wrapper, Input, Button, Form } from \"./MoviesPage.styled\";\nimport { useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getSearchedMovie } from \"services\";\nimport { Loader } from \"components/Loader\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { MdLocalMovies } from \"react-icons/md\";\nimport { FcSearch } from \"react-icons/fc\";\n\nexport const MoviesPage = () => {\n  const { register, handleSubmit, resetField } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchMovie() {\n      setLoading(true);\n      try {\n        if (!query) {\n          return;\n        }\n        const searchedQuery = await getSearchedMovie(query);\n        setMovies(searchedQuery);\n        if (searchedQuery.length === 0) {\n          toast.error(\"There is no movie with this title\");\n          return;\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [query]);\n\n  const onSubmit = (data) => {\n    setSearchParams(data.query);\n\n    navigate({\n      pathname: location.pathname,\n      search: `query=${data.query}`,\n    });\n\n    resetField(\"query\");\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          {...register(\"query\", {\n            required: true,\n          })}\n          placeholder=\"Type any movie\"\n        />\n        <Button type=\"submit\">\n          <FcSearch />\n        </Button>\n      </Form>\n      {loading && <Loader />}\n      {movies && (\n        <>\n          <div>\n            {movies.map(({ id, title }) => (\n              <div key={id}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: { location, label: \"Back to movies\" } }}\n                >\n                  <MdLocalMovies />\n                  {title}\n                </Link>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n      <Toaster />\n    </Wrapper>\n  );\n};\n","import styled, { keyframes } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { MdLocalMovies } from \"react-icons/md\";\n\nconst gradient = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\n\nconst glow = keyframes`\n  0% {\n  border-color: ${(props) => props.theme.colors.blue};\n  box-shadow: 0 0 5px #00b7ff33, inset 0 0 5px #001aff19, 0 2px 0 #000;\n  }\t\n  100% {\n  border-color: ${(props) => props.theme.colors.lightBlue};\n  box-shadow: 0 0 20px #00eeff99, inset 0 0 10px #0066ff66, 0 2px 0 #000;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(2)};\n  color: #f1e2f2;\n  &.active {\n    color: ${(props) => props.theme.colors.pink};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(195deg, #d81dc1, #3d0346, #c92be1);\n  background-size: 180% 180%;\n  animation: ${gradient} 3s ease infinite;\n  height: ${(props) => props.theme.spacing(300)};\n  margin: -12px;\n  padding: 4px 12px;\n`;\nexport const Icon = styled(MdLocalMovies)`\n  margin-right: ${(props) => props.theme.spacing(2)};\n`;\nexport const Form = styled.form`\n  position: relative;\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n`;\nexport const Input = styled.input`\n  animation: ${glow} 800ms ease-out infinite alternate;\n  border-radius: 10px;\n  color: ${(props) => props.theme.colors.white};\n  background: ${(props) => props.theme.colors.rgbPink};\n  padding: ${(props) => props.theme.spacing(2)};\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  position: absolute;\n  top: 33%;\n  left: 14%;\n  cursor: pointer;\n\n  &:hover {\n    transform: rotate(20deg) scale(1.2);\n    background-color: ${(props) => props.theme.colors.purple};\n  }\n`;\n"],"names":["MoviesPage","useForm","register","handleSubmit","resetField","useState","loading","setLoading","setError","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","navigate","useNavigate","useEffect","getSearchedMovie","searchedQuery","length","toast","fetchMovie","Wrapper","Form","onSubmit","data","pathname","search","Input","required","placeholder","Button","type","Loader","map","id","title","Link","to","state","from","label","gradient","keyframes","glow","props","theme","colors","blue","lightBlue","styled","NavLink","spacing","pink","Icon","MdLocalMovies","white","rgbPink","purple"],"sourceRoot":""}