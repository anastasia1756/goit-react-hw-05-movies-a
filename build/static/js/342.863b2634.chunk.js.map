{"version":3,"file":"static/js/342.863b2634.chunk.js","mappings":"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","sources":["pages/MoviesPage/MoviesPage.jsx","pages/MoviesPage/MoviesPage.styled.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Link,\n  Wrapper,\n  Input,\n  Button,\n  Form,\n  Img,\n  LinkWrapper,\n} from \"./MoviesPage.styled\";\nimport { useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getSearchedMovie } from \"services\";\nimport { Loader } from \"components/Loader\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { MdLocalMovies } from \"react-icons/md\";\nimport { FcSearch } from \"react-icons/fc\";\nimport PropTypes from \"prop-types\";\n\nexport const MoviesPage = () => {\n  const { register, handleSubmit, resetField } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const base_url = \"https://image.tmdb.org/t/p/w200\";\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setLoading(true);\n      try {\n        if (!query) {\n          return;\n        }\n        const searchedQuery = await getSearchedMovie(query);\n        setMovies(searchedQuery);\n        if (searchedQuery.length === 0) {\n          toast(\"There is no movie with this title\", {\n            icon: \"🙅‍♀️\",\n          });\n          return;\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [query]);\n\n  const onSubmit = (data) => {\n    setSearchParams(data.query);\n\n    navigate({\n      pathname: location.pathname,\n      search: `query=${data.query}`,\n    });\n\n    resetField(\"query\");\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          {...register(\"query\", {\n            required: true,\n          })}\n          placeholder=\"Type any movie\"\n        />\n        <Button type=\"submit\">\n          <FcSearch />\n        </Button>\n      </Form>\n      {loading && <Loader />}\n      {movies && (\n        <>\n          <LinkWrapper>\n            {movies.map(({ id, title, poster_path }) => (\n              <div key={id}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: { location, label: \"Back to movies\" } }}\n                >\n                  <MdLocalMovies />\n                  {title}\n                  {poster_path && (\n                    <Img>\n                      <img src={`${base_url}${poster_path}`} alt={title} />\n                    </Img>\n                  )}\n                </Link>\n              </div>\n            ))}\n          </LinkWrapper>\n        </>\n      )}\n      <Toaster />\n    </Wrapper>\n  );\n};\n\nMoviesPage.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled, { keyframes } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { MdLocalMovies } from \"react-icons/md\";\n\nconst gradient = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\n\nconst glow = keyframes`\n  0% {\n  border-color: ${(props) => props.theme.colors.blue};\n  box-shadow: 0 0 5px #00b7ff33, inset 0 0 5px #001aff19, 0 2px 0 #000;\n  }\t\n  100% {\n  border-color: ${(props) => props.theme.colors.lightBlue};\n  box-shadow: 0 0 20px #00eeff99, inset 0 0 10px #0066ff66, 0 2px 0 #000;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  max-width: ${(props) => props.theme.spacing(100)};\n  gap: ${(props) => props.theme.spacing(2)};\n  color: #f1e2f2;\n  &.active {\n    color: ${(props) => props.theme.colors.pink};\n  }\n  &:hover {\n    color: ${(props) => props.theme.colors.black};\n  }\n`;\nexport const Img = styled.span`\n  border-radius: 5px 5px 5px 5px;\n  visibility: hidden;\n  position: absolute;\n  left: 350px;\n  background: #fff;\n  box-shadow: -2px 2px 10px -1px #333;\n  border-radius: 5px;\n  transition: transform ${(props) => props.theme.animation} ease;\n\n  ${Link}:hover & {\n    visibility: visible;\n    transform: scale(0.5) rotate(-20deg);\n  }\n`;\nexport const Wrapper = styled.div`\n  background: linear-gradient(195deg, #d81dc1, #3d0346, #c92be1);\n  background-size: 180% 180%;\n  animation: ${gradient} 3s ease infinite;\n  height: ${(props) => props.theme.spacing(300)};\n  margin: -12px;\n  padding: 4px 12px;\n`;\nexport const Icon = styled(MdLocalMovies)`\n  margin-right: ${(props) => props.theme.spacing(2)};\n`;\nexport const Form = styled.form`\n  position: relative;\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n  max-width: ${(props) => props.theme.spacing(40)};\n`;\nexport const Input = styled.input`\n  animation: ${glow} 800ms ease-out infinite alternate;\n  border-radius: 10px;\n  color: ${(props) => props.theme.colors.white};\n  background: ${(props) => props.theme.colors.rgbPink};\n  padding: ${(props) => props.theme.spacing(2)};\n  width: 100%;\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  position: absolute;\n  top: 50%;\n  right: -10px;\n  transform: translateY(-50%);\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.3) translateY(-35%);\n    background-color: ${(props) => props.theme.colors.purple};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  position: relative;\n`;\n"],"names":["MoviesPage","useForm","register","handleSubmit","resetField","useState","loading","setLoading","setError","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","navigate","useNavigate","useEffect","getSearchedMovie","searchedQuery","length","toast","icon","fetchMovie","Wrapper","Form","onSubmit","data","pathname","search","Input","required","placeholder","Button","type","Loader","LinkWrapper","map","id","title","poster_path","Link","to","state","from","label","Img","src","alt","gradient","keyframes","glow","props","theme","colors","blue","lightBlue","styled","NavLink","spacing","pink","black","animation","Icon","MdLocalMovies","white","rgbPink","purple"],"sourceRoot":""}