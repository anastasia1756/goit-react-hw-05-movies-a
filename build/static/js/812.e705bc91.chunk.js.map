{"version":3,"file":"static/js/812.e705bc91.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","pages/MoviesPage/MoviesPage.styled.jsx"],"sourcesContent":["import { useFetchMovies } from \"hooks\";\nimport { Link } from \"react-router-dom\";\nimport { FaGratipay } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\n\nexport const Links = styled(Link)`\n  margin-left: ${(props) => props.theme.spacing(2)};\n  color: ${(props) => props.theme.colors.purple};\n`;\nexport const List = styled.li`\n  display: flex;\n  align-items: center;\n`;\nexport const HomePage = () => {\n  const { movies, loading, error } = useFetchMovies();\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      <ul>\n        {movies.map(({ title, id }) => (\n          <List key={id}>\n            <FaGratipay />\n            <Links to={`/movies/${id}`}>{title}</Links>\n          </List>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { useGetMovieById } from \"hooks\";\nimport { Btn, Link, List } from \"./MovieDetailsPage.styled\";\nimport { Loader } from \"components/Loader\";\nimport { TiArrowBack } from \"react-icons/ti\";\n\nexport const MovieDetailsPage = () => {\n  const {\n    movie: { poster_path, title, vote_average, overview, id },\n    genres,\n    loading,\n  } = useGetMovieById();\n\n  const base_url = \"https://image.tmdb.org/t/p/w200\";\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const onBackBtnClick = () => {\n    navigate(location?.state?.from?.location ?? \"/\");\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div>\n        <Btn onClick={onBackBtnClick}>\n          <TiArrowBack />\n          {location?.state?.from?.label ?? \"Go back home\"}\n        </Btn>\n        <img src={poster_path && `${base_url}${poster_path}`} alt={title} />\n        <h2>{title}</h2>\n        <p>User score: {vote_average * 10}%</p>\n        <p>Overview</p>\n        <p>{overview}</p>\n        <div>Genres</div>\n        <ul>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n        <div>Additional information</div>\n        <List>\n          <Link to={`/movies/${id}/cast`}>Cast</Link>\n          <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n          <Outlet />\n        </List>\n      </div>\n    </>\n  );\n};\n","import styled, { keyframes } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nconst pulse = keyframes`\n \t0%{box-shadow: 0 0 0 0 #ef6eae}\n`;\nexport const Link = styled(NavLink)`\n  margin-right: 10px;\n  text-decoration: none;\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.purple};\n  &.active {\n    color: ${(props) => props.theme.colors.pink};\n  }\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nexport const Btn = styled.button`\n  display: block;\n  padding: ${(props) => props.theme.spacing(3)};\n  margin: 20px 0 10px;\n  color: ${(props) => props.theme.colors.purple};\n  background-color: transparent;\n  border: none;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 0 2em #7f26867d;\n    animation: ${pulse} 1s;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, Wrapper } from \"./MoviesPage.styled\";\nimport { useNavigate, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getSearchedMovie } from \"services\";\nimport { Loader } from \"components/Loader\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { MdLocalMovies } from \"react-icons/md\";\n\n// import bg from \"assets/bg.jpg\";\nexport const MoviesPage = () => {\n  const { register, handleSubmit, resetField } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchMovie() {\n      setLoading(true);\n      try {\n        if (!query) {\n          return;\n        }\n        const searchedQuery = await getSearchedMovie(query);\n        setMovies(searchedQuery);\n        if (searchedQuery.length === 0) {\n          toast.error(\"There is no movie with this title\");\n          return;\n        }\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [query]);\n\n  const onSubmit = (data) => {\n    setSearchParams(data.query);\n\n    navigate({\n      pathname: location.pathname,\n      search: `query=${data.query}`,\n    });\n\n    resetField(\"query\");\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          {...register(\"query\", {\n            required: true,\n          })}\n          placeholder=\"Type any movie\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}\n      {movies && (\n        <>\n          <div>\n            {movies.map(({ id, title }) => (\n              <div>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: { location, label: \"Back to movies\" } }}\n                  key={id}\n                >\n                  <MdLocalMovies />\n                  {title}\n                </Link>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n      <Toaster />\n    </Wrapper>\n  );\n};\n","import styled, { keyframes } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { MdLocalMovies } from \"react-icons/md\";\n\nconst gradient = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  color: #f1e2f2;\n  &.active {\n    color: ${(props) => props.theme.colors.pink};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(195deg, #d81dc1, #3d0346, #c92be1);\n  background-size: 180% 180%;\n  animation: ${gradient} 3s ease infinite;\n  height: ${(props) => props.theme.spacing(300)};\n  margin: -12px;\n  padding: 4px 12px;\n`;\nexport const Icon = styled(MdLocalMovies)`\n  margin-right: ${(props) => props.theme.spacing(2)};\n`;\n"],"names":["Links","styled","Link","props","theme","spacing","colors","purple","List","HomePage","useFetchMovies","movies","loading","error","map","title","id","to","MovieDetailsPage","useGetMovieById","movie","poster_path","vote_average","overview","genres","navigate","useNavigate","location","useLocation","Btn","onClick","state","from","label","src","alt","name","pulse","keyframes","NavLink","pink","MoviesPage","useForm","register","handleSubmit","resetField","useState","setLoading","setError","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchedMovie","searchedQuery","length","toast","fetchMovie","Wrapper","onSubmit","data","pathname","search","required","placeholder","type","Loader","gradient","Icon","MdLocalMovies"],"sourceRoot":""}