{"version":3,"file":"static/js/986.6e35f24c.chunk.js","mappings":"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","sources":["components/Info/Info.styled.jsx","components/Info/Info.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const AddInfo = styled.div`\n  text-align: center;\n  font-weight: 700;\n  color: ${(props) => props.theme.colors.darkPurple};\n`;\nexport const Link = styled(NavLink)`\n  margin-right: 10px;\n  text-decoration: none;\n  font-weight: bold #530766b5;\n  color: ${(props) => props.theme.colors.purple};\n  transition: color ${(props) => props.theme.animation} ease;\n  &.active {\n    color: ${(props) => props.theme.colors.pink};\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.colors.lightBlue};\n  }\n`;\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  text-align: center;\n  text-decoration: line;\n`;\n","import { Outlet } from \"react-router-dom\";\nimport { AddInfo, Link, List } from \"./Info.styled\";\nimport { GiClick } from \"react-icons/gi\";\nimport PropTypes from \"prop-types\";\n\nexport const Info = ({ id }) => {\n  return (\n    <>\n      <AddInfo>Additional information</AddInfo>\n      <List>\n        <Link to={`/movies/${id}/cast`}>\n          Cast <GiClick />{\" \"}\n        </Link>\n        <Link to={`/movies/${id}/reviews`}>\n          Reviews <GiClick />\n        </Link>\n        <Outlet />\n      </List>\n    </>\n  );\n};\n\nInfo.propTypes = {\n  id: PropTypes.number,\n};\n","import { useNavigate, useLocation } from \"react-router-dom\";\nimport { useGetMovieById } from \"hooks\";\nimport {\n  Btn,\n  CardWrapper,\n  InfoWrapper,\n  GenresList,\n  Overview,\n  About,\n  Genres,\n  Votes,\n  OverviewWrapper,\n  Poster,\n  Title,\n} from \"./MovieDetailsPage.styled\";\nimport PropTypes from \"prop-types\";\nimport { Info } from \"components/Info\";\nimport { Loader } from \"components/Loader\";\nimport { TiArrowBack } from \"react-icons/ti\";\nimport noMovie from \"assets/no-movie.png\";\nimport ReactTypingEffect from \"react-typing-effect\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nexport const MovieDetailsPage = () => {\n  const {\n    movie: { release_date, poster_path, title, vote_average, overview, id },\n    genres,\n    loading,\n  } = useGetMovieById();\n  const base_url = \"https://image.tmdb.org/t/p/w200\";\n  const navigate = useNavigate();\n  const location = useLocation();\n  const year = release_date && release_date.slice(0, 4);\n  const onBackBtnClick = () => {\n    navigate(location?.state?.from?.location ?? \"/\");\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div>\n        <Btn onClick={onBackBtnClick}>\n          <TiArrowBack />\n          {location?.state?.from?.label ?? \"Go back home\"}\n        </Btn>\n        <CardWrapper>\n          <Poster\n            src={poster_path ? `${base_url}${poster_path}` : noMovie}\n            alt={title}\n          />\n          <InfoWrapper>\n            <Title>\n              {title}({year})\n            </Title>\n            <p>\n              User score: <Votes>{vote_average * 10}%</Votes>\n            </p>\n            <OverviewWrapper>\n              <About>Overview:</About>\n\n              {overview && (\n                <Overview>\n                  <ReactTypingEffect\n                    typingDelay={1000}\n                    speed={20}\n                    text={overview}\n                  />\n                </Overview>\n              )}\n            </OverviewWrapper>\n            {genres.length !== 0 && (\n              <>\n                <Genres>Genres:</Genres>\n                <GenresList>\n                  {genres.map(({ id, name }) => (\n                    <li key={id}>{name}</li>\n                  ))}\n                </GenresList>\n              </>\n            )}\n          </InfoWrapper>\n        </CardWrapper>\n        <Info id={id} />\n      </div>\n    </>\n  );\n};\n\nMovieDetailsPage.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      gender: PropTypes.number,\n    })\n  ),\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled, { keyframes } from \"styled-components\";\nconst pulse = keyframes`\n \t0%{box-shadow: 0 0 0 0 #ef6eae}\n`;\n\nexport const GenresList = styled.ul`\n  list-style: circle;\n  font-size: 10px;\n  margin-left: ${(props) => props.theme.spacing(3)};\n`;\nexport const Btn = styled.button`\n  gap: ${(props) => props.theme.spacing(1)};\n  display: flex;\n  padding: ${(props) => props.theme.spacing(3)};\n  margin: 20px 0 10px;\n  color: ${(props) => props.theme.colors.purple};\n  background-color: transparent;\n  border: 1px dotted ${(props) => props.theme.colors.purple};\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 0 2em #7f26867d;\n    animation: ${pulse} 1s;\n  }\n`;\nexport const CardWrapper = styled.div`\n  display: flex;\n  padding: 15px 0;\n  border: 2px solid black;\n\n  @media (max-width: 768px) {\n    display: block;\n    max-width: 320px;\n    margin: 0 auto;\n  }\n`;\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 25px;\n\n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\nexport const Overview = styled.div`\n  font-size: ${(props) => props.theme.spacing(3)};\n  font-style: italic;\n`;\n\nexport const About = styled.p`\n  font-weight: 700;\n`;\nexport const Genres = styled.div`\n  font-weight: 700;\n  font-size: 16px;\n`;\nexport const Votes = styled.span`\n  color: ${(props) => props.theme.colors.darkPurple};\n  font-weight: 700;\n  font-style: italic;\n`;\nexport const OverviewWrapper = styled.div`\n  min-height: 106px;\n  max-height: 115px;\n\n  @media (max-width: 768px) {\n    min-height: 180px;\n    max-height: unset;\n  }\n`;\nexport const Poster = styled.img`\n  @media (max-width: 768px) {\n    margin: 0 auto;\n  }\n`;\nexport const Title = styled.h2`\n  @media (max-width: 768px) {\n    text-align: center;\n  }\n`;\n"],"names":["AddInfo","styled","props","theme","colors","darkPurple","Link","NavLink","purple","animation","pink","lightBlue","List","Info","id","to","MovieDetailsPage","useGetMovieById","movie","release_date","poster_path","title","vote_average","overview","genres","loading","navigate","useNavigate","location","useLocation","year","slice","Loader","Btn","onClick","state","from","label","CardWrapper","Poster","src","noMovie","alt","InfoWrapper","Title","Votes","OverviewWrapper","About","Overview","typingDelay","speed","text","length","Genres","GenresList","map","name","pulse","keyframes","spacing"],"sourceRoot":""}